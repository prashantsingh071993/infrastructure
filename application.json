{
  "Description": "AWS CloudFormation Networking Template",
  "Parameters": {
      "VPCName": {
          "Type": "String"
      },
      "VPCCIDR": {
          "Type": "String"
      },
      "Subnet01CIDR": {
          "Type": "String"
      },
      "Subnet02CIDR": {
          "Type": "String"
      },
      "Subnet03CIDR": {
          "Type": "String"
      },
      "Subnet01Name": {
          "Type": "String"
      },
      "Subnet02Name": {
          "Type": "String"
      },
      "Subnet03Name": {
          "Type": "String"
      },
      "InternetGatewayName": {
          "Type": "String"
      },
      "RouteTableName": {
          "Type": "String"
      },
      "Region": {
          "Type": "String"
      },
      
      "AMI": {
          "Type": "String"
      },
      "TransitionDays": {
          "Type": "String"
      },
      
      
      "InstanceTypeParameter": {
          "Type": "String",
          "Default": "t2.micro",
          "AllowedValues": ["t2.micro", "m1.small", "m1.large"],
          "Description": "Enter t2.micro, m1.small, or m1.large. Default is t2.micro."
      }
      
  },
  "Resources": {

     "VPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
              "CidrBlock": {
                  "Ref": "VPCCIDR"
              },
              "EnableDnsHostnames": true,
              "EnableDnsSupport": true,
              "InstanceTenancy": "default",
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "VPCName"
                      }
                  }
              ]
          }
      },
      
      "Subnet01": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
              "AvailabilityZone": {
                  "Fn::Select": [
                      "0",
                      {
                          "Fn::GetAZs": {
                              "Ref": "Region"
                          }
                      }
                  ]
              },
              "CidrBlock": {
                  "Ref": "Subnet01CIDR"
              },
              "MapPublicIpOnLaunch": true,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "Subnet01Name"
                      }
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "Subnet02": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
              "AvailabilityZone": {
                  "Fn::Select": [
                      "1",
                      {
                          "Fn::GetAZs": {
                              "Ref": "Region"
                          }
                      }
                  ]
              },
              "CidrBlock": {
                  "Ref": "Subnet02CIDR"
              },
              "MapPublicIpOnLaunch": true,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "Subnet02Name"
                      }
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "Subnet03": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
              "AvailabilityZone": {
                  "Fn::Select": [
                      "2",
                      {
                          "Fn::GetAZs": {
                              "Ref": "Region"
                          }
                      }
                  ]
              },
              "CidrBlock": {
                  "Ref": "Subnet03CIDR"
              },
              "MapPublicIpOnLaunch": true,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "Subnet03Name"
                      }
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "InternetGatewayName"
                      }
                  }
              ]
          }
      },
      
      "InternetGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
              "InternetGatewayId": {
                  "Ref": "InternetGateway"
              },
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "RouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {
                          "Ref": "RouteTableName"
                      }
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "RouteTableAssociation01": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
              "RouteTableId": {
                  "Ref": "RouteTable"
              },
              "SubnetId": {
                  "Ref": "Subnet01"
              }
          }
      },
      
      "RouteTableAssociation02": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
              "RouteTableId": {
                  "Ref": "RouteTable"
              },
              "SubnetId": {
                  "Ref": "Subnet02"
              }
          }
      },
      
      "RouteTableAssociation03": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
              "RouteTableId": {
                  "Ref": "RouteTable"
              },
              "SubnetId": {
                  "Ref": "Subnet03"
              }
          }
      },
      
      "Route": {
          "Type": "AWS::EC2::Route",
          "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {
                  "Ref": "InternetGateway"
              },
              "RouteTableId": {
                  "Ref": "RouteTable"
              }
          }
      },
      
      

      "IAMProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
            "InstanceProfileName": "S3RDS",
            "Roles": [
                {
                    "Ref": "EC2CSYE6225Role"
                }
            ]
        }
    },



    "WebAppS3Policy":  {
      "Type" : "AWS::IAM::Policy",
      "DependsOn": "EC2CSYE6225Role",
      "Properties" : {
          "PolicyName": "WebAppS3Policy",
          "PolicyDocument" : {
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:DeleteObject"
                      ],
                      "Resource":[
                          {
                            "Fn::Join" : [
                                "", ["arn:aws:s3:::",{ "Ref": "S3Bucket"}
                                ]
                            ]
                          },
                          {
                            "Fn::Join" : ["", ["arn:aws:s3:::",{ "Ref": "S3Bucket"}, "/*"]]
                         }
                      ]
                  }
              ]
          },
          "Roles": [
          {
              "Ref": "EC2CSYE6225Role"
              
          }
          ]
        }
    },


      
      "ApplicationSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
              "GroupName": "ApplicationSecurityGroup",
              "GroupDescription": "Security tag for EC2",
              "SecurityGroupIngress": [
                  {
                      "CidrIp": "0.0.0.0/0",
                      "FromPort": 22,
                      "IpProtocol": "tcp",
                      "ToPort": 22
                  },
                  {
                      "CidrIp": "0.0.0.0/0",
                      "FromPort": 80,
                      "IpProtocol": "tcp",
                      "ToPort": 80
                  },
                  
                  {
                      "CidrIp": "0.0.0.0/0",
                      "FromPort": 3000,
                      "IpProtocol": "tcp",
                      "ToPort": 3000
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      
      "DatabaseSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
              "GroupDescription": "Allow http to client host",
              "SecurityGroupIngress":[
                  {
                      "IpProtocol": "tcp",
                      "FromPort":3306,
                      "ToPort": 3306,
                      "CidrIp": "0.0.0.0/0"
                  }
              ],
              "SecurityGroupEgress":[
                  {
                      "IpProtocol": "tcp",
                      "FromPort":80,
                      "ToPort": 80,
                      "CidrIp": "0.0.0.0/0"
                      
                  }
              ],
              "VpcId": { "Ref": "VPC"}
          }
      },
      
      "RDSSubnetGroup": {
          "Type": "AWS::RDS::DBSubnetGroup",
          "Properties": {
              "DBSubnetGroupDescription": "RDS Subnet Group",
              "DBSubnetGroupName": "SubnetGroupRDS",
              "SubnetIds": [
                  {
                      "Ref": "Subnet01"
                  },
                  {
                      "Ref": "Subnet02"
                  }
              ]
          }
      },
      
      "RDS": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
              "AllocatedStorage": "5",
              "DBInstanceClass": "db.t3.micro",
              "DBInstanceIdentifier": "csye6225-spring2020",
              "DBName": "csye6225",
              "Engine": "MySQL",
              "MasterUserPassword": "password",
              "MasterUsername": "dbuser",
              "MultiAZ": false,
              "PubliclyAccessible": false,
              "DBSubnetGroupName": {
                  "Ref": "RDSSubnetGroup"
              },
              "VPCSecurityGroups": [
                  {
                      "Ref": "DatabaseSecurityGroup"
                  }
              ]
          },
          "DeletionPolicy": "Delete"
      },

      "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
              "AccessControl": "Private",
              "BucketEncryption": {
                  "ServerSideEncryptionConfiguration" : [
                      {
                          "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                          }
                      }
                  ]
              },
              
              "LifecycleConfiguration": {
                  "Rules": [
                      {
                          "Prefix": "",
                          "Status": "Enabled",
                          "Transition": {
                              "TransitionInDays": { "Ref": "TransitionDays"},
                              "StorageClass": "STANDARD_IA"
                          }
                      }
                  ]
              }
          }
      },

      
      "EC2CSYE6225Role": {
          "Type": "AWS::IAM::Role",
          "Properties": {
              "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          
                      "Effect": "Allow",
                      "Principal": {
                          "Service": ["ec2.amazonaws.com"]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
              },
              
              "Path": "/"
          }
      },


      



      "EC2Instance": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
              "ImageId": {
                  "Ref": "AMI"
              },
              "InstanceType": {
                  "Ref": "InstanceTypeParameter"
              },
              "KeyName": "keypair2",
              "SecurityGroupIds": [
                  {
                      "Ref": "ApplicationSecurityGroup"
                  }
              ],
              "BlockDeviceMappings": [
                {
                  "DeviceName": "/dev/sda1",
                  "Ebs": {
                    "VolumeType": "gp2",
                    "DeleteOnTermination": "true",
                    "VolumeSize": "20"
                  }
                }
              ],

              "SubnetId": {
                  "Ref": "Subnet01"
              },
              
              "IamInstanceProfile": {
                    "Ref": "IAMProfile"
                          
              },
              "UserData": {
                  "Fn::Base64": {
                      "Fn::Join": [
                          "",
                          [
                              "#cloud-boothook\n",
                              "#!/bin/sh\n",
                              "cd /etc/profile.d\n",
                              "sudo touch custom.sh\n",
                              "sudo echo export RDS_HOSTNAME=",
                              {
                                  "Fn::GetAtt": [
                                      "RDS",
                                      "Endpoint.Address"
                                  ]
                              },
                              " >> custom.sh\n",
                              "sudo echo export RDS_USERNAME=dbuser",
                              " >> custom.sh\n",
                              "sudo echo export RDS_PASSWORD=password",
                              " >> custom.sh\n",
                              "sudo echo export S3_BUCKET_ADDR=",
                              {
                                  "Ref": "S3Bucket"
                              },
                              " >> custom.sh\n"
                          ]
                      ]
                  }
              }
          }
      }
  },

  "Outputs": {
      "VPCId": {
          "Description": "VPC id",
          "Value": {
              "Ref": "VPC"
          },
          "Export": {
              "Name": {"Fn::Sub": "${AWS::StackName}-VPC" }
          }
      },
      "Region": {
          "Description": "Region",
          "Value": {
              "Ref": "Region"
          },
          "Export": {
              "Name": {"Fn::Sub": "${AWS::StackName}-Region" }
          }
      },
      "Subnet1": {
          "Description": "Subnet 01",
          "Value": {
              "Ref": "Subnet01"
          },
          "Export": {
              "Name": {"Fn::Sub": "${AWS::StackName}-Subnet01" }
          }
      },
      "Subnet2": {
          "Description": "Subnet 01",
          "Value": {
              "Ref": "Subnet02"
          },
          "Export": {
              "Name": {"Fn::Sub": "${AWS::StackName}-Subnet02" }
          }
      },
      "Subnet3": {
          "Description": "Subnet 01",
          "Value": {
              "Ref": "Subnet03"
          },
          "Export": {
              "Name": {"Fn::Sub": "${AWS::StackName}-Subnet03" }
          }
      }
  },
  "AWSTemplateFormatVersion": "2010-09-09"
}
