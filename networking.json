{
  "Description": "AWS CloudFormation Networking Template",
  "Parameters": {
    "VPCName": {
      "Type": "String"
    },
    "VPCCIDR": {
      "Type": "String"
    },
    "Subnet01CIDR": {
      "Type": "String"
    },
    "Subnet02CIDR": {
      "Type": "String"
    },
    "Subnet03CIDR": {
      "Type": "String"
    },
    "Subnet01Name": {
      "Type": "String"
    },
    "Subnet02Name": {
      "Type": "String"
    },
    "Subnet03Name": {
      "Type": "String"
    },
    "InternetGatewayName": {
      "Type": "String"
    },
    "RouteTableName": {
      "Type": "String"
    },
    "Region": {
      "Type": "String"
    },
    "AMI": {
      "Type": "String"
    },
    
    "InstanceTypeParameter": {
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro", "m1.small", "m1.large"],
      "Description": "Enter t2.micro, m1.small, or m1.large. Default is t2.micro."
    }
    
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "VPCName"
            }
          }
        ]
      }
    },
    "Subnet01": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "Subnet01CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Subnet01Name"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Subnet02": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "Subnet02CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Subnet02Name"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Subnet03": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "Subnet03CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Subnet03Name"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "InternetGatewayName"
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "RouteTableName"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "RouteTableAssociation01": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "Subnet01"
        }
      }
    },
    "RouteTableAssociation02": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "Subnet02"
        }
      }
    },
    "RouteTableAssociation03": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "Subnet03"
        }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    
    "EC2Instance": {
         "Type": "AWS::EC2::Instance",
         "Properties": {
           "ImageId": {
             "Ref": "AMI"
           },
           "InstanceType": {
             "Ref": "InstanceTypeParameter"
           },
           "KeyName": "keypair",
           "SubnetId": {
             "Ref": "Subnet01"
           }
         }
       }
  },
  "Outputs": {
    "VPCId": {
      "Description": "VPC id",
      "Value": {
        "Ref": "VPC"
      },
      "Export": {
        "Name": {"Fn::Sub": "${AWS::StackName}-VPC" }
      }
    },
    "Region": {
      "Description": "Region",
      "Value": {
        "Ref": "Region"
      },
      "Export": {
        "Name": {"Fn::Sub": "${AWS::StackName}-Region" }
      }
    },
    "Subnet1": {
      "Description": "Subnet 01",
      "Value": {
        "Ref": "Subnet01"
      },
      "Export": {
        "Name": {"Fn::Sub": "${AWS::StackName}-Subnet01" }
      }
    },
    "Subnet2": {
      "Description": "Subnet 01",
      "Value": {
        "Ref": "Subnet02"
      },
      "Export": {
        "Name": {"Fn::Sub": "${AWS::StackName}-Subnet02" }
      }
    },
    "Subnet3": {
      "Description": "Subnet 01",
      "Value": {
        "Ref": "Subnet03"
      },
      "Export": {
        "Name": {"Fn::Sub": "${AWS::StackName}-Subnet03" }
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09"
}

